<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:AiP.Metro">

    <!-- Brushes -->

    <LinearGradientBrush x:Key="ListItemBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#5859B9" Offset="0" />
        <GradientStop Color="#5859B9" Offset="0.96875" />
        <GradientStop Color="#FFF" Offset="0.96875" />
        <GradientStop Color="#FFF" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ListItemHighLightBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#1BA1E2" Offset="0" />
        <GradientStop Color="#1BA1E2" Offset="0.96875" />
        <GradientStop Color="#FFF" Offset="0.96875" />
        <GradientStop Color="#FFF" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ListItemStopMonitorBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FD2761" Offset="0" />
        <GradientStop Color="#FD2761" Offset="0.96875" />
        <GradientStop Color="#FFF" Offset="0.96875" />
        <GradientStop Color="#FFF" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ListItemSelectedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#DE9317" Offset="0" />
        <GradientStop Color="#DE9317" Offset="0.96875" />
        <GradientStop Color="#FFF" Offset="0.96875" />
        <GradientStop Color="#FFF" Offset="1" />
    </LinearGradientBrush>


    <!-- Metro Window -->
    
    <Style x:Key="MetroWindow" TargetType="{x:Type local:MetroWindow}">
        <Setter Property="MinWidth" Value="800"/>
        <Setter Property="MinHeight" Value="600"/>
        <Setter Property="AllowsTransparency" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="Segoe, Microsoft YaHei"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MetroWindow}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Stroke="#FF474747" Margin="0">
                            <Rectangle.Effect>
                                <DropShadowEffect BlurRadius="10" ShadowDepth="0"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="48" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border Name="Title" Grid.Row="0" BorderThickness="15, 0, 0, 0" BorderBrush="{TemplateBinding Foreground}" Background="Transparent" VerticalAlignment="Top" HorizontalAlignment="Left">
                                <TextBlock FontSize="24" Foreground="{TemplateBinding Foreground}" Height="48" VerticalAlignment="Center" Margin="10, 10, 0, 0">
                                    <Run Text="{TemplateBinding Title}"></Run>
                                </TextBlock>
                            </Border>
                            <!--<local:QuickAccessItems x:Name="QuickAccessToolBar" Grid.Row="0" Margin="0, 0, 96, 0" HorizontalAlignment="Right" VerticalAlignment="Top">
                                <CheckBox Name="Startup" Background="#353535" Foreground="#FFFFFF" Style="{DynamicResource MuiCheckBox}" Padding="7, 6, 0, 0" Content=":" FontFamily="Wingdings" FontSize="18" Width="32" Height="32" ToolTip="Startup with Windows: True" />
                                <TextBlock Width="32" FontSize="16" Foreground="#656565" Padding="10, 0, 0, 0" VerticalAlignment="Center">|</TextBlock>
                            </local:QuickAccessItems>-->
                            <Canvas Name="ControlBox" Grid.Row="0" Width="96" HorizontalAlignment="Right" VerticalAlignment="Top">
                                <Button Name="Min" Background="#353535" Style="{DynamicResource CBButton}" Padding="8, 7, 0, 0" FontSize="16" Foreground="#FFF" FontFamily="Webdings" Content="0" Width="32" Height="32" Canvas.Left="0" ToolTip="Minimize Window" />
                                <Button Name="Max" Background="#353535" Style="{DynamicResource CBButton}" Padding="8, 7, 0, 0" FontSize="16" Foreground="#FFF" FontFamily="Webdings" Content="1" Width="32" Height="32" Canvas.Left="32" ToolTip="Maximize Window" />
                                <Button Name="Close" Background="#353535" Style="{DynamicResource CBButton}" Padding="8, 7, 0, 0" FontSize="16" Foreground="#FFF" FontFamily="Webdings" Content="r" Width="32" Height="32" Canvas.Left="64" ToolTip="Close Window" />
                            </Canvas>
                            <ContentPresenter Grid.Row="1" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Metro Window (No Title) -->

    <Style x:Key="MetroOverlay" TargetType="{x:Type local:MetroWindow}">
        <Setter Property="MinWidth" Value="800"/>
        <Setter Property="MinHeight" Value="600"/>
        <Setter Property="AllowsTransparency" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="Segoe, Microsoft YaHei"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MetroWindow}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Stroke="#FF474747" Margin="0">
                            <Rectangle.Effect>
                                <DropShadowEffect BlurRadius="10" ShadowDepth="0"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <ContentPresenter />
                                <Canvas Name="Bar" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="32">
                                    <Button Name="Close" Background="Transparent" Canvas.Right="0" Style="{DynamicResource CBButton}" Padding="8, 7, 0, 0" FontSize="16" Foreground="#FFF" FontFamily="Webdings" Content="r" Width="32" Height="32" ToolTip="Close Window" />
                                </Canvas>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Metro Box -->

    <Style x:Key="MetroBox" TargetType="{x:Type local:MetroWindow}">
        <Setter Property="AllowsTransparency" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="Segoe, Microsoft YaHei"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MetroWindow}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Stroke="#FF474747" Margin="0">
                            <Rectangle.Effect>
                                <DropShadowEffect BlurRadius="10" ShadowDepth="0"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="36" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="52" />
                            </Grid.RowDefinitions>
                            <Canvas Background="#353535" HorizontalAlignment="Stretch">
                                <TextBlock Foreground="{TemplateBinding Foreground}" FontSize="18" Margin="20 8 10 8">
                                    <Run Name="AppName">i</Run>
                                </TextBlock>
                                <TextBlock Canvas.Left="110" Text="{TemplateBinding Title}" Foreground="{TemplateBinding Foreground}" FontSize="18" Margin="0 8 0 8" />
                            </Canvas>
                            <Border Grid.Row="1" Margin="0 12 0 20" BorderThickness="0" BorderBrush="Transparent" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                                <ContentPresenter />
                            </Border>
                            <WrapPanel Name="ButtonGroup" Grid.Row="2" HorizontalAlignment="Center">
                                <Button Name="Okay" Content="OK" Style="{DynamicResource MessageBoxButton}" />
                                <Button Name="Yes" Content="Yes" Style="{DynamicResource MessageBoxButton}" />
                                <Button Name="No" Content="No" Style="{DynamicResource MessageBoxButton}" />
                                <Button Name="Cancel" Content="Cancel" Style="{DynamicResource MessageBoxButton}" />
                            </WrapPanel>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBox -->

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Width="10" Background="#454545" BorderThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="360"/>
        <Setter Property="MinHeight" Value="95"/>
        <Setter Property="Template">
            <Setter.Value >
                <ControlTemplate>
                    <Border Name="PanelBorder" Background="#8CBF26" BorderThickness="0">
                        <ScrollViewer x:Name="scrollviewer" >
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}" >
                                    <DockPanel>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Orientation="Vertical" DockPanel.Dock="Right"
                                                    Value="{TemplateBinding VerticalOffset}"
                                                    Maximum="{TemplateBinding ScrollableHeight}"
                                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                    Width="10" Margin="-4,0,-3,0">
                                            <ScrollBar.Template>
                                                <ControlTemplate>
                                                    <Border Background="Transparent" Width="10" >
                                                        <Track x:Name="PART_Track" IsDirectionReversed="True">
                                                            <Track.DecreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}"/>
                                                            </Track.DecreaseRepeatButton>
                                                            <Track.IncreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}"/>
                                                            </Track.IncreaseRepeatButton>
                                                            <Track.Thumb>
                                                                <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                                            </Track.Thumb>
                                                        </Track>
                                                    </Border>
                                                </ControlTemplate>
                                            </ScrollBar.Template>
                                        </ScrollBar>
                                        <ScrollContentPresenter HorizontalAlignment="Stretch" />
                                    </DockPanel>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter HorizontalAlignment="Stretch" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="MinHeight" Value="52"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{StaticResource ListItemBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="ItemBorder" Background="{TemplateBinding Background}">
                        <Border Name="Border" Padding="4, 0, 4, 0" BorderBrush="Transparent" BorderThickness="5, 0, 0, 0" SnapsToDevicePixels="true">
                            <!--ContentPresenter VerticalAlignment="Center" /-->
                            <Canvas>
                                <StackPanel Canvas.Left="0">
                                    <TextBlock DockPanel.Dock="Left" Margin="5, 5, 0, 0" FontSize="20" Foreground="#FFF" Text="{Binding Path=Source}" />
                                    <TextBlock DockPanel.Dock="Bottom" Margin="15, 0, 0, 10" Foreground="#DDD">
                                        <Run>to </Run>
                                        <Run Text="{Binding Path=Target}" FontSize="16"></Run>
                                    </TextBlock>
                                </StackPanel>
                                <TextBlock Canvas.Right="10" Margin="0 12 10 0" FontSize="20" Foreground="#FFF" Text="{Binding Path=WorkingDisplay}" />
                            </Canvas>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ListItemSelectedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ItemBorder" Property="Background" Value="{StaticResource ListItemHighLightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsWorking}" Value="false">
                <Setter Property="Background" Value="{StaticResource ListItemStopMonitorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- ListView -->

    <Style TargetType="{x:Type local:MetroFluidView}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MetroFluidView}">
                    <Border Name="Border" Width="{TemplateBinding Width}" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <ScrollViewer Name="SV" HorizontalScrollBarVisibility="Auto">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}" >
                                    <Grid Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <DockPanel Margin="{TemplateBinding Padding}">
                                            <ScrollContentPresenter Name="PART_ScrollContentPresenter" KeyboardNavigation.DirectionalNavigation="Local"/>
                                        </DockPanel>

                                        <ScrollBar Name="PART_HorizontalScrollBar"
                                            Orientation="Horizontal"
                                            Grid.Row="1"
                                            Maximum="{TemplateBinding ScrollableWidth}"
                                            ViewportSize="{TemplateBinding ViewportWidth}"
                                            Value="{TemplateBinding HorizontalOffset}"
                                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">
                                            <ScrollBar.Template>
                                                <ControlTemplate>
                                                    <Grid Background="Transparent" >
                                                        <Track x:Name="PART_Track" IsDirectionReversed="True">
                                                            <Track.DecreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}"/>
                                                            </Track.DecreaseRepeatButton>
                                                            <Track.IncreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}"/>
                                                            </Track.IncreaseRepeatButton>
                                                            <Track.Thumb>
                                                                <Thumb Background="Transparent" Opacity="0" />
                                                            </Track.Thumb>
                                                        </Track>
                                                    </Grid>
                                                </ControlTemplate>
                                            </ScrollBar.Template>
                                        </ScrollBar>

                                        <ScrollBar Name="PART_VerticalScrollBar"
                                            Grid.Column="1"
                                            Maximum="{TemplateBinding ScrollableHeight}"
                                            ViewportSize="{TemplateBinding ViewportHeight}"
                                            Value="{TemplateBinding VerticalOffset}"
                                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                                            <ScrollBar.Template>
                                                <ControlTemplate>
                                                    <Grid Background="Transparent" >
                                                        <Track x:Name="PART_Track" IsDirectionReversed="True">
                                                            <Track.DecreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}"/>
                                                            </Track.DecreaseRepeatButton>
                                                            <Track.IncreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}"/>
                                                            </Track.IncreaseRepeatButton>
                                                            <Track.Thumb>
                                                                <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                                            </Track.Thumb>
                                                        </Track>
                                                    </Grid>
                                                </ControlTemplate>
                                            </ScrollBar.Template>
                                        </ScrollBar>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#AAAAAA"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Name="WPContainer" IsItemsHost="True" Background="Transparent" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListViewItem}" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Border" HorizontalAlignment="Center" BorderThickness="0 0 0 0" BorderBrush="Transparent" SnapsToDevicePixels="true" Background="Transparent">
                        <Grid Background="Transparent" HorizontalAlignment="Stretch">
                            <Rectangle Name="SelBar" Fill="Transparent" VerticalAlignment="Stretch" HorizontalAlignment="Left"  RadiusX="2" RadiusY="2" Width="4" SnapsToDevicePixels="True"/>
                            <ContentPresenter HorizontalAlignment="Left"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#25FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Control Box Button -->
    
    <Style x:Key="CBButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas Name="btnBG" Background="{TemplateBinding Background}">
                        <TextBlock FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Background="Transparent"
                                   Foreground="{TemplateBinding Foreground}"
                                   Padding="{TemplateBinding Padding}"
                                   Width="{TemplateBinding Width}"
                                   Height="{TemplateBinding Height}"
                                   Text="{TemplateBinding Content}" />
                        <!--Image Source="{TemplateBinding ImageSource}" /-->
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="btnBG" Property="Background" Value="#FFF11515" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="btnBG" Property="Background" Value="#FFF11515" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Accept Button -->

    <Style x:Key="AcceptButton" TargetType="{x:Type local:ButtonExt}">
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ButtonExt}">
                    <Canvas Name="btnBG" Background="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Label Name="txt"
                               FontFamily="{TemplateBinding FontFamily}"
                               FontSize="{TemplateBinding FontSize}"
                               FontWeight="ExtraBold"
                               Background="Transparent"
                               Foreground="#959595"
                               HorizontalContentAlignment="Center"
                               VerticalContentAlignment="Center"
                               Padding="{TemplateBinding Padding}"
                               MaxWidth="{Binding ElementName=btnBG, Path=ActualWidth}"
                               Width="{Binding ElementName=btnBG, Path=ActualWidth}"
                               Height="{Binding ElementName=btnBG, Path=ActualHeight}">
                            <TextBlock Text="{TemplateBinding Content}" TextWrapping="Wrap" />
                        </Label>
                        <Image Source="{TemplateBinding ImageSource}" />
                        <Rectangle Name="btnBorder" Canvas.Top="0"
                                   Width="{Binding ElementName=btnBG, Path=ActualWidth}"
                                   Height="{Binding ElementName=btnBG, Path=ActualHeight}"
                                   RadiusX="10"
                                   RadiusY="10"
                                   StrokeThickness="5" 
                                   StrokeDashArray="3,1" 
                                   Stroke="#555555" />
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="btnBorder" Property="Stroke" Value="#959595" />
                            <!--<Setter TargetName="txt" Property="Foreground" Value="#959595" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="btnBorder" Property="Stroke" Value="#959595" />
                            <!--<Setter TargetName="txt" Property="Foreground" Value="#959595" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MessageBox Button -->

    <Style x:Key="MessageBoxButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="96" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="Margin" Value="8 0 8 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas Name="btnBG" Background="#555" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Label Name="txt"
                               FontFamily="{TemplateBinding FontFamily}"
                               FontSize="{TemplateBinding FontSize}"
                               Background="Transparent"
                               Foreground="#FFF"
                               HorizontalContentAlignment="Center"
                               VerticalContentAlignment="Center"
                               Padding="{TemplateBinding Padding}"
                               MaxWidth="{Binding ElementName=btnBG, Path=ActualWidth}"
                               Width="{Binding ElementName=btnBG, Path=ActualWidth}"
                               Height="{Binding ElementName=btnBG, Path=ActualHeight}">
                            <TextBlock Text="{TemplateBinding Content}" TextWrapping="Wrap" />
                        </Label>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="btnBG" Property="Background" Value="#F11515" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="btnBG" Property="Background" Value="#F11515" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CheckBox -->
    
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Grid Height="20" Width="20">
                            <Image x:Name="imageNoChecked" Source="/iGallery;component/Controls/metro.ui/Resources/uncheck.png" Height="32" Width="32"  Margin="-12" />
                            <Image x:Name="imageChecked" Source="/iGallery;component/Controls/metro.ui/Resources/check.png" Height="32" Width="32" Margin="-12" />
                        </Grid>
                        <Label Content="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" />
                    </StackPanel>

                    <ControlTemplate.Triggers >
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="imageChecked" Property="Visibility" Value="Visible" />
                            <Setter TargetName="imageNoChecked" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="imageChecked" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="imageNoChecked" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button CheckBox -->

    <Style x:Key="MuiCheckBox"  TargetType="{x:Type CheckBox}">
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Canvas Name="chkBG" Background="{TemplateBinding Background}">
                        <TextBlock Name="chkbox" FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}" Background="Transparent"
                                Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}"
                                Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                Text="{TemplateBinding Content}" ToolTip="{TemplateBinding ToolTip}"/>
                    </Canvas>
                    <ControlTemplate.Triggers >
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="chkbox" Property="Foreground" Value="#FF1BA1E2" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="chkBG" Property="Background" Value="#FFF11515" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="chkBG" Property="Background" Value="#FFF11515" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- RadioButton -->

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <StackPanel Orientation="Horizontal">
                        <Grid Height="20" Width="20">
                            <Image x:Name="imageNoChecked" Source="/iGallery;component/Controls/metro.ui/Resources/radiouncheck.png" Height="32" Width="32"  Margin="-12" />
                            <Image x:Name="imageChecked" Source="/iGallery;component/Controls/metro.ui/Resources/radiocheck.png" Height="32" Width="32" Margin="-12" />
                        </Grid>
                        <Label Content="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" />
                    </StackPanel>

                    <ControlTemplate.Triggers >
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="imageChecked" Property="Visibility" Value="Visible" />
                            <Setter TargetName="imageNoChecked" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="imageChecked" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="imageNoChecked" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button RadioButton -->

    <Style x:Key="MuiRadioButton"  TargetType="{x:Type RadioButton}">
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Canvas Name="rdoBG" Background="{TemplateBinding Background}">
                        <TextBlock Name="rdobox" FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}" Background="Transparent"
                                Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}"
                                Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                Text="{TemplateBinding Content}" ToolTip="{TemplateBinding ToolTip}"/>
                    </Canvas>
                    <ControlTemplate.Triggers >
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="rdobox" Property="Foreground" Value="#FF1BA1E2" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="rdoBG" Property="Background" Value="#FFF11515" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="rdoBG" Property="Background" Value="#FFF11515" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Progress Bar -->

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Border BorderBrush="Transparent" BorderThickness="0">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" Name="PART_Track" />
                            <Rectangle Fill="{TemplateBinding Foreground}" Name="PART_Indicator" HorizontalAlignment="Left"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
